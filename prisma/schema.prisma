generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model brands {
  id             Int              @id @default(autoincrement())
  name           String           @unique @db.VarChar(100)
  product_brands product_brands[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model cart {
  id         Int       @id @default(autoincrement())
  user_id    Int
  product_id Int
  quantity   Int?      @default(1)
  added_at   DateTime? @default(now()) @db.Timestamp(6)
  products   products  @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users      users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, product_id])
}

model categories {
  id                 Int                  @id @default(autoincrement())
  name               String               @unique @db.VarChar(100)
  description        String?
  created_at         DateTime?            @default(now()) @db.Timestamp(6)
  updated_at         DateTime?            @default(now()) @db.Timestamp(6)
  product_categories product_categories[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model colors {
  id             Int              @id @default(autoincrement())
  name           String           @unique @db.VarChar(50)
  hex_code       String           @unique @db.VarChar(7)
  product_colors product_colors[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model discounts {
  id                  Int                 @id @default(autoincrement())
  name                String              @db.VarChar(100)
  description         String?
  discount_percentage Decimal             @db.Decimal(5, 2)
  start_date          DateTime            @db.Timestamp(6)
  end_date            DateTime            @db.Timestamp(6)
  is_active           Boolean?            @default(true)
  created_at          DateTime?           @default(now()) @db.Timestamp(6)
  updated_at          DateTime?           @default(now()) @db.Timestamp(6)
  product_discounts   product_discounts[]
}

model favorites {
  id         Int       @id @default(autoincrement())
  user_id    Int
  product_id Int
  added_at   DateTime? @default(now()) @db.Timestamp(6)
  products   products  @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users      users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, product_id])
}

model product_brands {
  id         Int      @id @default(autoincrement())
  product_id Int
  brand_id   Int
  brands     brands   @relation(fields: [brand_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  products   products @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([product_id, brand_id])
}

model product_colors {
  id         Int      @id @default(autoincrement())
  product_id Int
  color_id   Int
  colors     colors   @relation(fields: [color_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  products   products @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([product_id, color_id])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model product_photos {
  id         Int       @id @default(autoincrement())
  product_id Int
  photo_url  String
  position   Int?      @default(0)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  products   products  @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model product_sizes {
  id         Int      @id @default(autoincrement())
  product_id Int
  size_id    Int
  products   products @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sizes      sizes    @relation(fields: [size_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([product_id, size_id])
}

model product_tags {
  id         Int      @id @default(autoincrement())
  product_id Int
  tag_id     Int
  products   products @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  tags       tags     @relation(fields: [tag_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([product_id, tag_id])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model products {
  id                 Int                  @id @default(autoincrement())
  name               String               @db.VarChar(200)
  description        String?
  price              Decimal              @db.Decimal(10, 2)
  stock              Int?                 @default(0)
  sales_count        Int?                 @default(0)
  created_at         DateTime?            @default(now()) @db.Timestamp(6)
  updated_at         DateTime?            @default(now()) @db.Timestamp(6)
  cart               cart[]
  favorites          favorites[]
  product_brands     product_brands[]
  product_categories product_categories[]
  product_colors     product_colors[]
  product_discounts  product_discounts[]
  product_photos     product_photos[]
  product_sizes      product_sizes[]
  product_tags       product_tags[]
}

model sizes {
  id            Int             @id @default(autoincrement())
  size          String          @unique @db.VarChar(10)
  product_sizes product_sizes[]
}

model tags {
  id           Int            @id @default(autoincrement())
  name         String         @unique @db.VarChar(50)
  product_tags product_tags[]
}

model users {
  id            Int         @id @default(autoincrement())
  first_name    String      @db.VarChar(50)
  last_name     String      @db.VarChar(50)
  phone_number  String?     @db.VarChar(20)
  email         String      @unique @db.VarChar(100)
  password_hash String      @db.VarChar(255)
  avatar_url    String?
  role          String?     @default("customer") @db.VarChar(50)
  created_at    DateTime?   @default(now()) @db.Timestamp(6)
  updated_at    DateTime?   @default(now()) @db.Timestamp(6)
  cart          cart[]
  favorites     favorites[]
}

model product_categories {
  id          Int        @id @default(autoincrement())
  product_id  Int
  category_id Int
  categories  categories @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  products    products   @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([product_id, category_id])
}

model product_discounts {
  id          Int       @id @default(autoincrement())
  product_id  Int
  discount_id Int
  discounts   discounts @relation(fields: [discount_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  products    products  @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([product_id, discount_id])
}
